UsageSetting Up GitHub: Create an account on GitHub if you don'thave one. 
Explain the steps you took to set up your GitHub account. 
Repository Creation: Create a new public GitHub repository named "my-first-repo." Provide a link to your repository.
Repository Cloning: Clone the "my-first-repo" repository to your local machine. 
Provide a screenshot of your terminal showing the clone command.Collaborative Workflow: 
Invite a classmate or friend to collaborate on your repository. 
Ask them to fork your repository, make a change, and create a pull request. 
Accept their pull request, and explain the collaborative process


Setting Up GitHub

1. *Create a GitHub Account:*
   - Go to [GitHub's website](https://github.com).
   - Click on "Sign up."
   - Enter your email address and click on "Continue."
   - Choose a password, create a username, and follow the on-screen instructions to complete the sign-up process.
   - Verify your email address by clicking on the link sent to your email.

2. *Set Up Your GitHub Profile:*
   - After logging in, click on your profile picture in the top-right corner and select "Your profile."
   - Click on "Edit profile" to add your bio, location, and any other personal information youâ€™d like to share.

Repository Creation

1. *Create a New Repository:*
   - On your GitHub dashboard, click on the green "New" button next to "Repositories."
   - Name your repository "my-first-repo."
   - Choose "Public" to make the repository visible to everyone.
   - Optionally, add a description and a README file.
   - Click on "Create repository."

2. *Repository Link:*
   - After creating the repository, you'll be redirected to its page.
   - The link to your repository will look like this: `https://github.com/your-username/my-first-repo`
   
 Repository Cloning

1. *Clone the Repository to Your Local Machine:*
   - Open your terminal or command prompt.
   - Navigate to the directory where you want to clone the repository.
   - Use the following command to clone the repository:
     ```bash
     git clone https://github.com/your-username/my-first-repo.git
     ```
   - This will create a local copy of the repository on your machine.

    run the above command in your terminal, you can take a screenshot by pressing `PrtScn` (Print Screen) on your keyboard, or `Shift + Command + 4` on Mac, and paste the screenshot into a document.*

Collaborative Workflow

1. Invite a Collaborator:
   - Go to your repository on GitHub.
   - Click on "Settings" and then "Collaborators & teams."
   - Enter your collaborator's GitHub username or email and click "Add collaborator."
   - They will receive an invitation to collaborate on your repository.

2. *Collaborator Forks the Repository:*
   - Your collaborator will go to your repository's page and click "Fork" to create their own copy of your repository.

3. *Collaborator Makes Changes:*
   - The collaborator can clone their forked repository, make changes, and push those changes to their fork.
   - Once done, they will navigate to the "Pull requests" tab in your repository and click on "New pull request."
   - They can compare their changes with your repository and click on "Create pull request."

4. *Accept the Pull Request:*
   - You will receive a notification about the pull request.
   - Go to the "Pull requests" tab of your repository and review the changes.
   - If everything looks good, click "Merge pull request" to accept the changes into your repository.
   
Explanation of Collaborative Process

- *Forking*: Your collaborator forks your repository, creating a personal copy where they can make changes without affecting your original repository.
- *Making Changes*: They can clone their forked repository to their local machine, make changes, and push those changes back to their fork on GitHub.
- *Pull Request*: They then create a pull request, which is a proposal to merge their changes into your original repository.
- *Review and Merge*: You can review the changes, discuss any necessary modifications, and, if satisfied, merge the changes into your main branch.

This process allows multiple people to work on a project simultaneously, contributing changes that can be reviewed and integrated in a controlled manner.
